<script>
    import P5 from "p5";
    const container = document.querySelector(".p5") as HTMLElement;
    const sketch = (p5: P5) => {
        const o = {
            sizex: 5,
            sizey: 5,
            elements: [],
            showImage: false,
        } as any;

        p5.preload = () => {
            o.img = p5.loadImage("/projects/a38/1.jpg");

            o.elements.push(p5.loadImage("/projects/a38/t.png"));
            o.elements.push(p5.loadImage("/projects/a38/b.png"));
            o.elements.push(p5.loadImage("/projects/a38/s.png"));
        };

        p5.setup = () => {
            o.data = [];
            o.width = container.clientWidth;
            o.height = container.clientHeight;

            p5.createCanvas(o.width, o.height);
            p5.noStroke();

            o.img.loadPixels();
            o.img.resize(o.width, 0);
            o.img.updatePixels();
            if (o.showImage) {
                p5.image(o.img, 0, 0);
            }

            for (let starty = 0; starty < o.img.height; starty++) {
                for (let startx = 0; startx < o.img.width; startx++) {
                    let index = (startx + starty * o.img.width) * 4;

                    let r = o.img.pixels[index];
                    let g = o.img.pixels[index + 1];
                    let b = o.img.pixels[index + 2];

                    let bright = r * 0.299 + g * 0.587 + b * 0.114;

                    let t = Math.floor(bright / (255 / o.elements.length));
                    if (t > o.elements.length - 1) t = o.elements.length - 1;

                    o.data.push(t);

                    startx = startx + o.sizex - 1;
                }
                starty = starty + o.sizey - 1;
            }

            let actual = o.data[0];
            let count = 0;
            for (let i = 0; i < o.data.length; i++) {
                let x = i % Math.ceil(o.img.width / o.sizex);
                let y = Math.floor(i / Math.ceil(o.img.width / o.sizex));
                let t = o.data[i];

                if (
                    actual === t &&
                    x !== Math.ceil(o.img.width / o.sizex) - 1
                ) {
                    count++;
                    continue;
                }

                p5.image(
                    o.elements[actual],
                    (x - count) * o.sizex,
                    y * o.sizey,
                    o.sizex * (count + 1),
                    o.sizey,
                );

                actual = t;
                count = 0;
            }
        };
        p5.windowResized = () => p5.setup();
    };
    new P5(sketch, container);
</script>
<div class="p5"></div>
